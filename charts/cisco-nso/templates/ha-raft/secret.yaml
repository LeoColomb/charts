{{- if .Values.haRaft.enabled }}
{{- range .Values.haRaft.secrets }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
  namespace: {{ include "common.names.namespace" $ | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $.Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: ha-raft
  {{- if $.Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  {{- if .ca }}
  ca.crt: {{ .ca | b64enc | quote }}
  {{- end -}}
  tls.crt: {{ required "A valid .certificate entry required!" .certificate | b64enc | quote }}
  tls.key: {{ required "A valid .key entry required!" .key | b64enc | quote }}
{{- end }}
{{- if and .Values.haRaft.tls .Values.haRaft.selfSigned (not .Values.haRaft.existingSecret) }}
{{- $nsoHaRaftServiceName := (printf "%s-%s" (include "common.names.fullname" $) "ha-raft" | trunc 63 | trimSuffix "-") }}
{{- $secretName := include "common.secrets.name" (dict "defaultNameSuffix" "ha-raft-tls" "context" $) }}
{{- $ca := genCA "cisco-nso-ha-raft-ca" 365 }}
{{- $initialCluster := list }}
{{- range $e, $i := until (int .Values.replicaCount) }}
{{- $initialCluster = append $initialCluster (printf "%s-%d.%s.%s.svc.%s" (include "common.names.fullname" $) $i $nsoHaRaftServiceName (include "common.names.namespace" $) $.Values.clusterDomain) }}
{{- end }}
{{- $cert := genSignedCert $secretName nil $initialCluster 365 $ca }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: ha-raft
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
{{- end }}
{{- end }}
