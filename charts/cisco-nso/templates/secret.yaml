{{- if not .Values.nso.existingSecret }}
{{- $privateKey := coalesce .Values.nso.sshPrivateKey (genPrivateKey "rsa") }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "common.secrets.name" (dict "defaultNameSuffix" "admin" "context" $) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/basic-auth
data:
  username: {{ .Values.nso.username | b64enc | quote }}
  password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.secrets.name" (dict "defaultNameSuffix" "admin" "context" $)) "key" "password" "providedValues" (list "nso.password") "length" 16 "context" $) }}
  ssh-privatekey: {{ include "common.secrets.lookup" (dict "secret" (include "common.secrets.name" (dict "defaultNameSuffix" "admin" "context" $)) "key" "ssh-privatekey" "defaultValue" $privateKey "context" $) }}
{{- end }}
